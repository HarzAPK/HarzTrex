name: T-Rex APK erstellen (ZIP)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: JDK 17 installieren
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Android SDK vorbereiten & Lizenzen akzeptieren
        shell: bash
        run: |
          set -euxo pipefail
          sudo "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses <<< "y" > /dev/null
          sudo "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: ZIP-Datei im Repo-Root finden
        id: findzip
        shell: bash
        run: |
          set -euo pipefail
          ZIP=$(ls -1 *.zip 2>/dev/null | head -n1 || true)
          if [[ -z "$ZIP" ]]; then
            echo "Keine *.zip im Repo-Root gefunden." >&2
            exit 1
          fi
          echo "Gefundene ZIP: $ZIP"
          echo "zip=$ZIP" >> "$GITHUB_OUTPUT"

      - name: ZIP entpacken
        shell: bash
        run: |
          set -eux
          rm -rf extracted
          mkdir -p extracted
          unzip -q "${{ steps.findzip.outputs.zip }}" -d extracted
          echo "Struktur (max. 3 Ebenen):"
          find extracted -maxdepth 3 -type f | sed 's/^/ - /'

      - name: Projektordner + Gradle-Datei finden
        id: findproj
        shell: bash
        run: |
          set -euo pipefail
          ROOT="extracted"
          # Suche nach settings.gradle(.kts), gradlew oder build.gradle(.kts)
          FOUND=$(find "$ROOT" -type f \
            \( -name "settings.gradle" -o -name "settings.gradle.kts" -o \
               -name "gradlew" -o -name "build.gradle" -o -name "build.gradle.kts" \) \
            | head -n1 || true)
          if [[ -z "$FOUND" ]]; then
            echo "Keine Gradle-Dateien in der ZIP gefunden." >&2
            exit 1
          fi
          PROJ_DIR=$(dirname "$FOUND")

          # Falls nur Wrapper-Datei tief im Tree liegt, bis Projektwurzel hochsteigen
          WRAP=$(find "$PROJ_DIR" -maxdepth 3 -type f -name "gradle-wrapper.properties" | head -n1 || true)
          if [[ -n "$WRAP" ]]; then
            PROJ_DIR=$(dirname "$(dirname "$(dirname "$WRAP")")")
          fi

          echo "Projektordner: $PROJ_DIR"
          echo "project_dir=$PROJ_DIR" >> "$GITHUB_OUTPUT"

      - name: Prüfen ob Gradle-Wrapper existiert
        id: wrapper
        working-directory: ${{ steps.findproj.outputs.project_dir }}
        shell: bash
        run: |
          if [[ -f gradlew ]]; then
            echo "has_wrapper=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_wrapper=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Falls nötig Gradle CLI installieren
        if: steps.wrapper.outputs.has_wrapper == 'false'
        shell: bash
        run: |
          set -eux
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          echo "$HOME/.sdkman/candidates/gradle/current/bin" >> $GITHUB_PATH

      - name: Debug-APK bauen
        working-directory: ${{ steps.findproj.outputs.project_dir }}
        shell: bash
        run: |
          set -eux
          if [[ -f gradlew ]]; then
            chmod +x gradlew
            ./gradlew --version
            ./gradlew assembleDebug
          else
            gradle --version
            gradle assembleDebug
          fi

      - name: APK hochladen
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: trex-debug-apk
          path: |
            ${{ steps.findproj.outputs.project_dir }}/**/*.apk
            ${{ steps.findproj.outputs.project_dir }}/**/outputs/**/*.apk
          if-no-files-found: error
          retention-days: 7

      - name: Build-Logs hochladen (bei Fehlern)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ steps.findproj.outputs.project_dir }}/**/build/**/*.log
          if-no-files-found: warn
          retention-days: 7
