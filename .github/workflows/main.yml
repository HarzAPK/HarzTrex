name: T-Rex APK erstellen (ZIP)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: JDK 17 installieren
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Tools installieren
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

      - name: Android SDK Basis einrichten
        uses: android-actions/setup-android@v3

      - name: SDK-Manager vorbereiten & Lizenzen akzeptieren
        shell: bash
        run: |
          set -e
          SDKROOT="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          SDKMANAGER=""
          for d in "$SDKROOT/cmdline-tools/latest/bin" "$SDKROOT/cmdline-tools/17.0/bin" "$SDKROOT/cmdline-tools/16.0/bin"; do
            if [ -x "$d/sdkmanager" ]; then SDKMANAGER="$d/sdkmanager"; break; fi
          done
          if [ -z "$SDKMANAGER" ]; then echo "sdkmanager nicht gefunden"; exit 1; fi
          "$SDKMANAGER" --version || true
          # Bekannter Bug: 'yes | sdkmanager --licenses' kann mit 'Broken pipe' enden.
          # Mit '|| true' ignorieren wir das, nachdem alle Lizenzen akzeptiert wurden.
          yes | "$SDKMANAGER" --licenses || true

      - name: Android Pakete installieren
        shell: bash
        run: |
          set -e
          SDKROOT="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          SDKMANAGER="$(ls -d "$SDKROOT"/cmdline-tools/*/bin | head -n1)/sdkmanager"
          yes | "$SDKMANAGER" "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Gradle 8.7 installieren
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          echo "$HOME/.sdkman/candidates/gradle/8.7/bin" >> $GITHUB_PATH
          gradle --version

      - name: Projekt aus ZIP entpacken
        run: |
          test -f TrexRoarApp_v2.zip || (echo "TrexRoarApp_v2.zip fehlt im Repo-Wurzelordner" && exit 1)
          unzip -o TrexRoarApp_v2.zip -d extracted
          if [ -d "extracted/TrexRoarApp_v2/app" ]; then
            echo "PROJECT_DIR=extracted/TrexRoarApp_v2" >> $GITHUB_ENV
          elif [ -d "extracted/app" ]; then
            echo "PROJECT_DIR=extracted" >> $GITHUB_ENV
          else
            echo "Kein app/-Ordner gefunden"; ls -la extracted; exit 1
          fi

      - name: Debug-APK bauen
        run: |
          cd "$PROJECT_DIR"
          test -f build.gradle.kts || (echo "build.gradle.kts fehlt" && exit 1)
          test -f settings.gradle.kts || (echo "settings.gradle.kts fehlt" && exit 1)
          gradle :app:assembleDebug --no-daemon --stacktrace

      - name: APK hochladen
        uses: actions/upload-artifact@v4
        with:
          name: trex-debug-apk
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk
