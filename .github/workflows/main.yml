name: T-Rex APK erstellen (ZIP)

on:
  workflow_dispatch:
  push:
    paths:
      - "TrexRoarApp_v2.zip"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: JDK 17 installieren
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Android SDK vorbereiten & Lizenzen
        uses: android-actions/setup-android@v3

      - name: Android Pakete
        run: |
          sdkmanager --licenses <<< "y"
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: ZIP entpacken
        id: unzip
        run: |
          set -e
          ZIP="TrexRoarApp_v2.zip"
          [ -f "$ZIP" ] || { echo "ZIP '$ZIP' fehlt"; exit 1; }
          rm -rf extracted
          unzip -q "$ZIP" -d extracted
          ROOT=$(find extracted -maxdepth 2 -type f -name "settings.gradle*" -printf "%h\n" | head -n1)
          [ -z "$ROOT" ] && ROOT="extracted"
          echo "PROJECT_DIR=$ROOT" >> $GITHUB_OUTPUT

      - name: Debug-APK bauen
        run: |
          PROJ="${{ steps.unzip.outputs.PROJECT_DIR }}"
          cd "$PROJ"
          if [ -x "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew --no-daemon assembleDebug
          else
            gradle --no-daemon assembleDebug
          fi

      - name: APK hochladen
        uses: actions/upload-artifact@v4
        with:
          name: trex-debug-apk
          path: |
            ${{ steps.unzip.outputs.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk
            ${{ steps.unzip.outputs.PROJECT_DIR }}/app/build/outputs/apk/*/debug/*.apk
