name: T-Rex APK erstellen (ZIP)

on:
  workflow_dispatch:
  push:
    paths:
      - 'TrexRoarApp_*.zip'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: JDK 17 installieren
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Android SDK vorbereiten & Lizenzen akzeptieren
        shell: bash
        run: |
          yes | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses || true
          sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: ZIP-Datei finden
        id: findzip
        shell: bash
        run: |
          ZIP="$(ls TrexRoarApp_*.zip 2>/dev/null | head -n1 || true)"
          if [ -z "$ZIP" ]; then
            echo "Keine passende ZIP gefunden!"
            exit 1
          fi
          echo "ZIP_NAME=$ZIP" >> $GITHUB_ENV
          echo "Gefundene ZIP: $ZIP"

      - name: ZIP entpacken
        shell: bash
        run: |
          rm -rf extracted
          mkdir extracted
          unzip -o "$ZIP_NAME" -d extracted

      - name: Projektordner finden
        id: findproject
        shell: bash
        run: |
          GRADLEW=$(find extracted -name gradlew | head -n1 || true)
          if [ -n "$GRADLEW" ]; then
            echo "PROJECT_DIR=$(dirname "$GRADLEW")" >> $GITHUB_ENV
            echo "BUILD_TOOL=wrapper" >> $GITHUB_ENV
          else
            SETTINGS=$(find extracted -name settings.gradle -o -name settings.gradle.kts | head -n1 || true)
            if [ -n "$SETTINGS" ]; then
              echo "PROJECT_DIR=$(dirname "$SETTINGS")" >> $GITHUB_ENV
              echo "BUILD_TOOL=gradle_cli" >> $GITHUB_ENV
            else
              echo "Kein Projekt erkannt!"
              exit 1
            fi
          fi

      - name: Falls n√∂tig Gradle installieren
        if: env.BUILD_TOOL == 'gradle_cli'
        shell: bash
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7

      - name: Debug-APK bauen
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          if [ "${BUILD_TOOL}" = "wrapper" ]; then
            chmod +x gradlew
            ./gradlew assembleDebug
          else
            gradle assembleDebug
          fi

      - name: APK hochladen
        uses: actions/upload-artifact@v4
        with:
          name: trex-debug-apk
          path: |
            ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk
            ${{ env.PROJECT_DIR }}/**/build/outputs/apk/debug/*.apk
          if-no-files-found: error
